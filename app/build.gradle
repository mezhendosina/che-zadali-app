plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 34
    signingConfigs {
        rustore_release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("keystore/keystore_config")

            if (keystorePropsFile.exists()) {
                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file("keystore/mezhendosina_key.jks")
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
        release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("keystore/keystore_config")

            if (keystorePropsFile.exists()) {
                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file("keystore/mezhendosina_key.jks")
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
    }
    defaultConfig {
        applicationId "com.mezhendosina.sgo.app"
        minSdk 24
        targetSdk 34
        versionCode 41
        versionName '3.0.5'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        kapt {
//            arguments {
//                arg("room.shemaLocation", "$projectDir/schemas")
//            }
//        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        rustore_release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    viewBinding {
        enabled true
    }
    buildFeatures {
        viewBinding true
        buildConfig true
//        compose true
    }
//    composeOptions {
//        kotlinCompilerExtensionVersion = "1.4.7"
//    }

    namespace 'com.mezhendosina.sgo.app'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.aar"])

    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.6.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // gson
    implementation "com.google.code.gson:gson:$gson_version"

    // datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-preferences-core:1.0.0"

    // html parser
    implementation 'org.jsoup:jsoup:1.15.4'

    // swipe refresh layout
//    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // viewpager 2
    implementation "androidx.viewpager2:viewpager2:1.1.0-beta02"

    // markdown support
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    implementation "io.noties.markwon:recycler:$markwon_version"

    // glide
    implementation('com.github.bumptech.glide:glide:4.14.2') {
        exclude group: "com.android.support"
    }

    // retrofit
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.tinder.scarlet:scarlet:0.1.12'

    // Splashscreen api
    implementation 'androidx.core:core-splashscreen:1.0.1'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // shimmer for placeholders
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // check memory leaks
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    // Blur
//    implementation 'jp.wasabeef:blurry:4.0.1'

//    // netschoolapi
//    implementation 'io.github.theentropyshard:netschoolapi:1.0'

    // get color pallete from image
    implementation 'androidx.palette:palette-ktx:1.0.0'

    // hilt
    implementation "com.google.dagger:hilt-android:2.48.1"
    kapt "com.google.dagger:hilt-compiler:2.48.1"
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")



    // compose
//
//    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
//    implementation composeBom
//    androidTestImplementation composeBom
//
//    // Material Design 3
//    implementation 'androidx.compose.material3:material3'
//
//    // Android Studio Preview support
//    implementation 'androidx.compose.ui:ui-tooling-preview'
//    debugImplementation 'androidx.compose.ui:ui-tooling'
//
//    // UI Tests
//    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
//    debugImplementation 'androidx.compose.ui:ui-test-manifest'
//
//    // Optional - Add window size utils
//    implementation 'androidx.compose.material3:material3-window-size-class'
//
//    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.8.1'
//    // Optional - Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
//    // Optional - Integration with LiveData
//    implementation 'androidx.compose.runtime:runtime-livedata'
}