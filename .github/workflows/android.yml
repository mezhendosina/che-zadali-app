name: Android CI

on:
  push:
    branches: "release"


env:
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
  RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Create google-services.json
        run: cat /home/runner/work/sgo-app/sgo-app/app/google-services.json | base64
      - name: Putting data into google-services.json
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/sgo-app/sgo-app/app/google-services.json

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_FILE }}
        run: |
          TMP_KEYSTORE_FILE_PATH=/home/runner/work/sgo-app/sgo-app/app/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/mezhendosina_key.jks


      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleRelease --stacktrace

      - name: Get built APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: /home/runner/work/sgo-app/sgo-app/app/build/outputs/apk/release/app-release.apk

      - name: Read RELEASE.md file
        id: getRelease
        run: echo "release=$(cat .home/runner/work/sgo-app/sgo-app/RELEASE.md)" >> $GITHUB_OUTPUT

      - name: Send release notes to Telegram channel
        run: curl -F chat_id=-1001621609379 -F parse_mode=Markdown -F text=${{ steps.getRelease.outputs.release }} https://api.telegram.org/bot${{ secrets.TELEGRAM_API_TOKEN }}/sendMessage
      - name: Send file to Telegram channel
        run: curl -F document=@"/home/runner/work/sgo-app/sgo-app/app/build/outputs/apk/release/app-release.apk" https://api.telegram.org/bot${{ secrets.TELEGRAM_API_TOKEN }}/sendDocument?chat_id=-1001621609379
#    - name: Get latest draft release
#      id: get_current_release
#      uses: joutvhu/get-release@v1
#      with:
#        draft: true
#      env:
#        GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Upload APK
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#        asset_path: app/build/outputs/apk/release/app-release.apk
#        asset_name: SGO app.zip
